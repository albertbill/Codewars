//In this kata, you must create a digital root function.

//A digital root is the recursive sum of all the digits in a number. Given n, take the sum of the digits of n. If that value has more than one digit, continue reducing in this way until a single-digit number is produced. This is only applicable to the natural numbers.

//Here's how it works:

//digital_root(16)
//=> 1 + 6
//=> 7

//digital_root(942)
//=> 9 + 4 + 2
//=> 15 ...
//=> 1 + 5
//=> 6

function digital_root(n) {
  let newNum = n.toString().split('').map(val => parseInt(val, 10));
  let isDone=false;
  let count=0;
  while(newNum.length>1) {
    count = newNum.reduce(function(a, b) {return a + b});
    newNum = count.toString().split('').map(val => parseInt(val, 10));
  }
  return count;
}
