// Your task is to find the first element of an array that is not consecutive.

// E.g. If we have an array [1,2,3,4,6,7,8] then 1 then 2 then 3 then 4 are all consecutive but 6 is not, so that's the first non-consecutive number.

// If the whole array is consecutive then return null2.

// The array will always have at least 2 elements1 and all elements will be numbers. The numbers will also all be unique and in ascending order. The numbers could be positive or negative and the first non-consecutive could be either too!

// If you like this Kata, maybe try this one next: https://www.codewars.com/kata/represent-array-of-numbers-as-ranges

// 1 Can you write a solution that will return null2 for both [] and [ x ] though? ( This is not tested, but you can write your own example test. )

// 2
// Swift, Ruby and Crystal: nil
// Haskell: Nothing
// Python: None
// Julia: nothing

function firstNonConsecutive (arr) {
  let arrNum=[]; let temp=[];
  for(let i=arr[0];i<=arr[arr.length-1];i++) {
    arrNum.push(i);
  }
  for(let value of arrNum) {
    if(arr.indexOf(value)===-1){
      temp.push(value);
    }
  }
  console.log(arr)
  if(temp===undefined||temp.length==0) {
    return null;
  } else {
    for(let j=0;j<arrNum.length;j++){
      if(arrNum[j]===temp[0]) {
        return arrNum[j+1];
      }
    }
  }
}
